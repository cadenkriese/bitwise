from random import randrange
import inquirer

def random_question(multiple_choice=False):
    bases = [hex, int, bin, oct]
    
    initial_base = bases.pop(randrange(4))
    final_base = bases[randrange(3)]
    
    if (multiple_choice):
        return generate_question(initial_base, final_base, True)
    else: 
        return generate_question(initial_base, final_base, False)
    
def generate_question(initial, final, multiple_choice=False):
    number = randrange(100)

    # Format the number with the given primitive functions
    # Truncate a suffix generated by the function if applicable.
    initialFormatted = initial(number)
    if (initial != int): initialFormatted = initialFormatted[2:]
    finalFormatted = final(number)
    if (final != int): finalFormatted = finalFormatted[2:]

    if (multiple_choice):
        choices = [finalFormatted]
        # Append 3 random answers
        for i in range(3):
            choices.append(random_answer())
        
        return {
            "question": inquirer.List('input', 
                message=f'What is {initialFormatted} ({function_to_string(initial)}) in {function_to_string(final)}?', 
                choices=scramble(choices),
            ),
            "answer": finalFormatted,
        }
    else:
        return {
            "question": inquirer.Text('input', message=f'What is {initialFormatted} ({function_to_string(initial)}) in {function_to_string(final)}?'),
            "answer": finalFormatted
            }
        
# random_answer retrieves a random answer to fill other multiple-choice options
# It returns a string representation of a random number 1-100 in a random number system.
def random_answer():
    base = [hex, int, bin, oct][randrange(4)]
    answer = base(randrange(100))
    if (base != int): answer = answer[2:]
    return answer
    
def scramble(ordered_list):
    scrambled_list = []

    for i in range(len(ordered_list)):
        scrambled_list.append(ordered_list.pop(randrange(len(ordered_list))))
        
    return scrambled_list
    
def function_to_string(func):
    if (func == hex):
        return "Hexadecimal"
    elif (func == int):
        return "Decimal"
    elif (func == bin):
        return "Binary"
    elif (func == oct):
        return "Octal"